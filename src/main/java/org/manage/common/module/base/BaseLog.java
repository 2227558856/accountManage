package org.manage.common.module.base;

import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.IBean;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BaseLog<M extends BaseLog<M>> extends Model<M> implements IBean {

	/**
	 * 主键 主键唯一标识
	 */
	public void setId(java.math.BigInteger id) {
		set("id", id);
	}
	
	/**
	 * 主键 主键唯一标识
	 */
	public java.math.BigInteger getId() {
		return get("id");
	}
	
	/**
	 * 创建时间 创建时间(提交时间)
	 */
	public void setCreatedTime(java.util.Date createdTime) {
		set("created_time", createdTime);
	}
	
	/**
	 * 创建时间 创建时间(提交时间)
	 */
	public java.util.Date getCreatedTime() {
		return getDate("created_time");
	}
	
	/**
	 * 更新时间 更新时间
	 */
	public void setUpdatedTime(java.util.Date updatedTime) {
		set("updated_time", updatedTime);
	}
	
	/**
	 * 更新时间 更新时间
	 */
	public java.util.Date getUpdatedTime() {
		return getDate("updated_time");
	}
	
	/**
	 * 是否删除 0-未删除 1-已删除
	 */
	public void setIsDeleted(java.lang.Integer isDeleted) {
		set("is_deleted", isDeleted);
	}
	
	/**
	 * 是否删除 0-未删除 1-已删除
	 */
	public java.lang.Integer getIsDeleted() {
		return getInt("is_deleted");
	}
	
	/**
	 * 操作 1-增加 2-删除 3-修改
	 */
	public void setOperate(java.lang.Integer operate) {
		set("operate", operate);
	}
	
	/**
	 * 操作 1-增加 2-删除 3-修改
	 */
	public java.lang.Integer getOperate() {
		return getInt("operate");
	}
	
	/**
	 * 对象 1-系统 2-服务器 表示此次操作对应的是系统or服务器
	 */
	public void setObject(java.lang.Integer object) {
		set("object", object);
	}
	
	/**
	 * 对象 1-系统 2-服务器 表示此次操作对应的是系统or服务器
	 */
	public java.lang.Integer getObject() {
		return getInt("object");
	}
	
	/**
	 * 对象id 表示此次操作对应的对象id
	 */
	public void setObjectId(java.math.BigInteger objectId) {
		set("object_id", objectId);
	}
	
	/**
	 * 对象id 表示此次操作对应的对象id
	 */
	public java.math.BigInteger getObjectId() {
		return get("object_id");
	}
	
	/**
	 * 内容 把对象,提交前后这些内容在后端拼接成一个字符串再存入数据库
	 */
	public void setContent(java.lang.String content) {
		set("content", content);
	}
	
	/**
	 * 内容 把对象,提交前后这些内容在后端拼接成一个字符串再存入数据库
	 */
	public java.lang.String getContent() {
		return getStr("content");
	}
	
	/**
	 * 提交者 即本系统账号的主键
	 */
	public void setUserId(java.math.BigInteger userId) {
		set("user_id", userId);
	}
	
	/**
	 * 提交者 即本系统账号的主键
	 */
	public java.math.BigInteger getUserId() {
		return get("user_id");
	}
	
}

